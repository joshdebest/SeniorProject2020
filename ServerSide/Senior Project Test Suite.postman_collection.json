{
	"info": {
		"_postman_id": "8511a4ab-7fea-4632-aba3-7f9a2fadb00e",
		"name": "Senior Project Test Suite",
		"description": "This is the test suite for the back end of debestrobotics.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Clear Database",
			"item": [
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"postman.setEnvironmentVariable(\"curLoginCookie\", cookie.value);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2eac648-eefd-4c62-a351-4fd5edd8250c",
								"exec": [
									"tests['200 response'] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST Usr Tests",
			"item": [
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"var locURL = postman.getResponseHeader(\"Location\")",
									"locURL = locURL && locURL.split('/');",
									"",
									"tests[\"Location returned\"] = locURL;",
									"",
									"console.log(locURL);",
									"",
									"postman.setEnvironmentVariable(\"curLoginCookie\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Successful logout\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLoginCookie}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLoginCookie}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Duplicate Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"email error tag is there\"] = responseBody.has(\"duplicateEmail\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jdebest@email.com\",\n    \"firstName\": \"Josh\",\n    \"lastName\" : \"DeBest\",\n    \"password\" : \"password\",\n    \"role\"     : 2,\n    \"grade\": null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"student1Login\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student1@pegasusschool.com\",\n    \"firstName\": \"First1\",\n    \"lastName\" : \"Last1\",\n    \"password\" : \"password1\",\n    \"role\"     : 0,\n    \"grade\": 6\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register dup Student 1 logged in",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"tests[\"prohibitedReg tag returned\"] = responseBody.has(\"prohibitedRegister\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student1@pegasusschool.com\",\n    \"firstName\": \"First1\",\n    \"lastName\" : \"Last1\",\n    \"password\" : \"password1\",\n    \"role\"     : 0,\n    \"grade\": 6\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 Logged in",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"prohibitedRegister\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\": 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Student1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{student1Login}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{student1Login}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register dup Student 1 Logged out",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"duplicateEmail\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student1@pegasusschool.com\",\n    \"firstName\": \"First1\",\n    \"lastName\" : \"Last1\",\n    \"password\" : \"password1\",\n    \"role\"     : 0,\n    \"grade\": 6\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (No email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'email';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'email';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (No firstName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var res = JSON.parse(responseBody);",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'firstName';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty firstName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'firstName';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (No lastName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'lastName';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty lastName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'lastName';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (No password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'password';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'password';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (No role)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"badValue\");",
									"tests['role param present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'role';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty role)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'role';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : \"\",\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Student 2 (Empty grade)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['grade param present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'grade';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"student2@pegasusschool.com\",\n    \"firstName\": \"First2\",\n    \"lastName\" : \"Last2\",\n    \"password\" : \"password2\",\n    \"role\"     : 0,\n    \"grade\"\t   : \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Successful Register Student Dwight",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"dwightLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"dschrute@pegasusschool.com\",\n    \"firstName\": \"Dwight\",\n    \"lastName\" : \"Schrute\",\n    \"password\" : \"bearsbeetbattlestargalatica\",\n    \"role\"     : 0,\n    \"grade\"\t   : 7\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Dwight",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{dwightLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{dwightLogin}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) no email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'email';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) Empty email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'email';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"\",\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) no firstName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'firstName';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) Empty firstName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'firstName';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) No lastName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'lastName';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"Pam\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) Empty lastName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'lastName';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) No password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'password';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"Beesley\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) Empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"missingField\");",
									"tests['email params present'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'password';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Register Pam (parent) successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8005145d-65d0-4d41-867f-6afd26ed56ac",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"pamLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pbeesley@pegasusschool.com\",\n    \"firstName\": \"Pam\",\n    \"lastName\" : \"Beesley\",\n    \"password\" : \"jim\",\n    \"role\"     : 1,\n    \"grade\"\t   : null\n}"
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Pam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"postman.setEnvironmentVariable(\"dwightLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{pamLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{pamLogin}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Usr GET",
			"item": [
				{
					"name": "GET without login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a74df008-92f9-4fbe-86ea-05d002550cbf",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Student Michael Scott",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "245c35f8-aab9-4861-b13d-af85876fe8ed",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"mscottLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mscott@pegasus.com\",\n    \"firstName\": \"Michael\",\n    \"lastName\" : \"Scott\",\n    \"password\" : \"worldsbestboss\",\n    \"role\"     : 0,\n    \"grade\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Michael (email in body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Body has an id\"] = result[0].id;",
									"tests[\"Body has correct email\"] = result[0].email === \"mscott@pegasus.com\";",
									"tests[\"Gets only one user\"] = result.length === 1;",
									"tests[\"only get id and email\"] = Object.keys(result[0]).length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"mscott@pegasus.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Michael (No body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Body has an id\"] = result[0].id === 5;",
									"tests[\"Body has correct email\"] = result[0].email === \"mscott@pegasus.com\";",
									"tests[\"Gets only one user\"] = result.length === 1;",
									"tests[\"Gets only id and email\"] = Object.keys(result[0]).length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/{email} Michael good",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var res = JSON.parse(responseBody);",
									"tests[\"only get one person back\"] = res.length === 1;",
									"",
									"tests[\"Body has an id\"] = res[0].id === 5;",
									"tests[\"Correct fname\"] = res[0].firstName === \"Michael\";",
									"tests[\"Correct lname\"] = res[0].lastName === \"Scott\";",
									"tests[\"Correct email\"] = res[0].email === \"mscott@pegasus.com\";",
									"tests[\"Correct role\"] = res[0].role === 0;",
									"tests[\"Correct grade\"] = res[0].grade === 7;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/mscott@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"mscott@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/{email} unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa7dcb35-6b42-49c4-8873-a445bbed53bc",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"permissionError\");",
									"tests['Correct param returned'] = res[0].params === 'unauthorized request'; ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/{email} doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa7dcb35-6b42-49c4-8873-a445bbed53bc",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"permissionError\");",
									"tests['Correct param returned'] = res[0].params === 'unauthorized request'; ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/corona@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"corona@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET unauthorized URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa7dcb35-6b42-49c4-8873-a445bbed53bc",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"",
									"//Returns an array of length 0",
									"tests[\"Gets 0 users\"] = result.length === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr?email=student1@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							],
							"query": [
								{
									"key": "email",
									"value": "student1@pegasusschool.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Michael Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{mscottLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{mscottLogin}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"curLoginCookie\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET/{email} Michael",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var res = JSON.parse(responseBody);",
									"tests[\"only get one person back\"] = res.length === 1;",
									"tests[\"Body has an id\"] = res[0].id === 5;",
									"tests[\"Correct fname\"] = res[0].firstName === \"Michael\";",
									"tests[\"Correct lname\"] = res[0].lastName === \"Scott\";",
									"tests[\"Correct email\"] = res[0].email === \"mscott@pegasus.com\";",
									"tests[\"Correct role\"] = res[0].role === 0;",
									"tests[\"Correct grade\"] = res[0].grade === 7;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"mscott@pegasus.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/mscott@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"mscott@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/{email} doesn't exist Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa7dcb35-6b42-49c4-8873-a445bbed53bc",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var res = JSON.parse(responseBody);",
									"tests[\"Correct tag returned\"] = responseBody.has(\"userNotFound\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/corona@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"corona@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET Michael in URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"person in question\"] = (JSON.parse(responseBody)).length !== 0;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Body has an id\"] = result[0].id === 5;",
									"tests[\"Body has correct email\"] = result[0].email === \"mscott@pegasus.com\";",
									"tests[\"Gets only one user\"] = result.length === 1;",
									"tests[\"returns right num of fields\"] = Object.keys(result[0]).length === 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr?email=mscott@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							],
							"query": [
								{
									"key": "email",
									"value": "mscott@pegasus.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Gets five users\"] = result.length === 5;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin logout Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Successful logout\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLoginCookie}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLoginCookie}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ssns POST and GET",
			"item": [
				{
					"name": "Admin login no email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"failedLogin error tag is present\"] = responseBody.has(\"failedLogin\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin login no pwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"failedLogin error tag is present\"] = responseBody.has(\"failedLogin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"jdebest@email.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin login pwd incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"failedLogin error tag is present\"] = responseBody.has(\"failedLogin\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"lol\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"postman.setEnvironmentVariable(\"curLoginCookie\", cookie.value);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ssns GET All",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e785d50-b85f-41e5-8319-782f14fc8215",
								"exec": [
									"//admin",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/Ssns/",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Ssns GET Mine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e785d50-b85f-41e5-8319-782f14fc8215",
								"exec": [
									"//admin",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var res = JSON.parse(responseBody);",
									"tests[\"Gets id, usrID, and loginTime\"] = Object.keys(res).length === 3;",
									"tests[\"Good loginTime\"] = res.loginTime > 0;",
									"tests[\"Correct usrID\"] = res.usrID === 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/Ssns/{{curLoginCookie}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLoginCookie}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ssns GET Michael's",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e785d50-b85f-41e5-8319-782f14fc8215",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/Ssns/{{mscottLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{mscottLogin}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ssns doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e785d50-b85f-41e5-8319-782f14fc8215",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/Ssns/{{lala}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{lala}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Successful logout\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLoginCookie}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLoginCookie}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Parent/Student PUT and DELETE (Usr)",
			"item": [
				{
					"name": "Register Parent LeBron James",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "245c35f8-aab9-4861-b13d-af85876fe8ed",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"lebronLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"lebron@pegasus.com\",\n    \"firstName\": \"Lebron\",\n    \"lastName\" : \"james\",\n    \"password\" : \"lakernation\",\n    \"role\"     : 1,\n    \"grade\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "LeBron Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"lebronLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"lebron@pegasus.com\", \"password\": \"lakernation\"}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful name change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46efc611-6c15-4d9c-8cfa-f386d9ebaa4d",
								"exec": [
									"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"LeBron\",\n    \"lastName\" : \"James\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Old Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Missing old password\"] = (\"noOldPassword\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"newpassword\",\n    \"oldPassword\" : \"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty New Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"",
									"tests[\"Has Error params\"] = (\"password\" === JSON.parse(responseBody)[0][\"params\"][0]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"\",\n    \"oldPassword\" : \"lakernation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Old Password Incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"oldPwdIncorrect\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"lakernation\",\n    \"oldPassword\" : \"2020champs\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"// can't change email",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"prohibitedField\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"tests[\"Has Error Params\"] = (\"email\" === JSON.parse(responseBody)[0][\"params\"][0]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jamesgang@pegasus.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"tests[\"Has Error Params\"] = (\"role\" === JSON.parse(responseBody)[0][\"params\"][0]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"LeBron\",\n    \"lastName\" : \"James\",\n    \"role\"     : 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful pwd change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"2020champs\",\n    \"oldPassword\" : \"lakernation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful pwd change back",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"lakernation\",\n    \"oldPassword\" : \"2020champs\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "LeBron Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{lebronLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{lebronLogin}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dwight K Schrute login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"var locURL = postman.getResponseHeader(\"Location\")",
									"locURL = locURL && locURL.split('/');",
									"tests[\"Location returned\"] = locURL;",
									"postman.setEnvironmentVariable(\"dwightLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"dschrute@pegasusschool.com\", \"password\": \"bearsbeetbattlestargalatica\"}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauth name change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f5ab771-e063-4ba2-87f7-b4e16943edb7",
								"exec": [
									"tests[\"Status code is 403: Unauthorized\"] = responseCode.code === 403;",
									"tests[\"Permission error\"] = (\"permissionError\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Bronny\",\n    \"lastName\" : \"James\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Old Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Missing old password\"] = (\"noOldPassword\" === JSON.parse(responseBody)[0][\"tag\"]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"newpassword\",\n    \"oldPassword\" : \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty New Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"",
									"tests[\"Correct tag returned\"] = responseBody.has(\"badValue\");",
									"tests['Correct param returned'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'password';",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"\",\n    \"oldPassword\" : \"lakernation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password Mismatch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"oldPwdIncorrect\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"beets\",\n    \"oldPassword\" : \"dundermifflin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful pwd change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"beets\",\n    \"oldPassword\" : \"bearsbeetbattlestargalatica\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful pwd change back",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"bearsbeetbattlestargalatica\",\n    \"oldPassword\" : \"beets\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bad role change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"// AU is non-admin so changing role is not allowed",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"tests[\"Has Params\"] = (\"role\" === JSON.parse(responseBody)[0][\"params\"][0]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\"     : 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"prohibitedField\" === JSON.parse(responseBody)[0][\"tag\"]);",
									"tests['Correct param returned'] = res[0].params && res[0].params.length === 1 && res[0].params[0] === 'email';",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"LeBron@lol.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Good grade change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grade\"     : 8\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauth DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"//current user is not person in question",
									"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/lebron@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"lebron@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauth DELETE Self",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"//only admins can delete users",
									"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/dschrute@pegasusschool.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"dschrute@pegasusschool.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dwight Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{dwightLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{dwightLogin}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admin PUT and DELETE (Usr)",
			"item": [
				{
					"name": "Register Student Kathy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "245c35f8-aab9-4861-b13d-af85876fe8ed",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"kathyLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"kathy@pegasus.com\",\n    \"firstName\": \"Katherine\",\n    \"lastName\" : \"Bennett\",\n    \"password\" : \"debest\",\n    \"role\"     : 0,\n    \"grade\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kathy Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{kathyLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{kathyLogin}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25c56caf-9e09-4525-9294-0ed77cb9f8f5",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var cookie = postman.getResponseCookie(\"debestAuth\");",
									"tests[\"Cookie Exists\"] = cookie && cookie.value !== undefined;",
									"",
									"var locURL = postman.getResponseHeader(\"Location\")",
									"locURL = locURL && locURL.split('/');",
									"",
									"tests[\"Location returned\"] = locURL;",
									"",
									"postman.setEnvironmentVariable(\"adminLogin\", cookie.value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\" : \"jdebest@email.com\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Ssns/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kathy edit Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "248c8bf8-d77b-4cad-bf0b-3e517632fe3e",
								"exec": [
									"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Kathy\",\n    \"lastName\" : \"DeBest\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Old Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"newpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "OldPwd mismatch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"newnewpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change email (Bad)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"prohibitedField\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"debest@pegasus.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change role (good)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Kathy\",\n    \"lastName\" : \"DeBest\",\n    \"role\"     : 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Users before DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Gets Seven Users\"] = result.length === 7;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Kathy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"//student logged in not person in question",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Kathy (user doesnt exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var res = JSON.parse(responseBody);",
									"tests[\"Correct tag returned\"] = responseBody.has(\"userNotFound\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/kathy@pegasus.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"kathy@pegasus.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Users After DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Gets Six Users\"] = result.length === 6;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful Admin name change",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46efc611-6c15-4d9c-8cfa-f386d9ebaa4d",
								"exec": [
									"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"test\",\n    \"lastName\" : \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Admin pwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 200: Bad Request\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"newpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty Passwords",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b426ac5-4653-4d76-921c-e93c801c1576",
								"exec": [
									"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
									"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\" : \"\",\n    \"oldPassword\" : \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Normal PUT with oldPwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46efc611-6c15-4d9c-8cfa-f386d9ebaa4d",
								"exec": [
									"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\" :\"Josh\",\n\t\"lastName\":\"DeBest\",\n\t\"password\" : \"newnewpassword\",\n\t\"oldPassword\" : \"newpassword\",\n\t\"role\" : 2,\n\t\"grade\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Normal PUT w/o oldPwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46efc611-6c15-4d9c-8cfa-f386d9ebaa4d",
								"exec": [
									"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\" :\"Josh\",\n\t\"lastName\":\"DeBest\",\n\t\"password\" : \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr/jdebest@email.com",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr",
								"jdebest@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GET All Users Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5a8880e-d437-4dfd-a5cc-70a6d5ecd452",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var result = JSON.parse(responseBody);",
									"tests[\"Gets Six Users\"] = result.length === 6;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Usr",
							"host": [
								"{{url}}"
							],
							"path": [
								"Usr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c644edeb-5b67-4b56-a538-041388b89e5a",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Ssns/{{adminLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{adminLogin}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
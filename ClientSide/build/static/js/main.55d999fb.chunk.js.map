{"version":3,"sources":["DeBestRoboticsLogo.png","api.js","actions/actions.js","components/NavBar/NavigationBar.jsx","components/Pages/AboutUs/AboutUs.jsx","components/LogIn/LogIn.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","reducers/Users.js","reducers/index.js","reducers/Errs.js","store.js","index.js"],"names":["module","exports","headers","Headers","myFetch","method","endpoint","body","fetch","JSON","stringify","credentials","catch","err","post","signUp","cred","cb","dispatch","prevState","info","then","newUser","type","User","description","console","log","signIn","creds","userInfo","user","details","set","styled","div","AboutUs","props","className","Component","LogIn","closeErrorConf","btn","clearErrors","state","email","password","handleChange","bind","logIn","event","this","preventDefault","newState","target","name","value","setState","Col","sm","offset","Form","FormGroup","as","Row","controlId","Label","FormControl","placeholder","onChange","Button","onClick","Styles","Home","Object","keys","length","Navbar","expand","variant","Brand","href","src","require","width","height","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","to","Link","path","render","component","App","withRouter","connect","Users","bindActionCreators","actions","Boolean","window","location","hostname","match","action","rootReducer","combineReducers","Errs","store","createStore","composeWithDevTools","applyMiddleware","thunk","createBrowserHistory","navigator","serviceWorker","ready","registration","unregister","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.55d999fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DeBestRoboticsLogo.01251ade.png\";","// Interface to the REST server\n\nconst baseURL = \"http://localhost:3001/\";\n//const baseURL = \"http://www.debestrobotics.com/\";\n\nvar currSessionCookie;\nconst headers = new Headers();\nheaders.set('Content-Type', 'application/JSON');\n\n\nfunction myFetch(method, endpoint, body){\n   return fetch(baseURL + endpoint, {\n      method: method,\n      body: (body ? JSON.stringify(body) : null),\n      headers: headers,\n      credentials: 'include'\n   }).catch(err => {throw err});\n}\n\nexport function post(endpoint, body){\n   return myFetch('POST', endpoint, body);\n}\n// GET/Usr/{email}\nexport function get(endpoint, body){\n   return myFetch('GET', endpoint, body);\n}\n// GET/Usr \n//export function get(endpoint){\n//   return myFetch('GET', endpoint);\n//}\n\nexport function put(endpoint, body){\n   return myFetch('PUT', endpoint, body);\n}\nexport function del(endpoint){\n   return myFetch('DELETE', endpoint);\n}\n\n//  Functions for api requests\n\n/**\n * Register a user\n * @param {Object} User info\n * @returns {Promise resolving to new user registration}\n */\nexport function signUp(info){\n   return post('Usr', info).catch(err => {throw err});\n}\n\nexport function logIn(creds){\n   return post('Ssns', creds).catch(err => {throw err});\n}\n\nexport function logOut(){\n   return del('Ssns/' + currSessionCookie).catch(err => {throw err});\n}\n\n/**\n * @param User email to index database\n * @returns {Promise} json parsed data\n */\nexport function getUser(email) {\n   return get ('Usr/' + email)\n   .then(res => res.json())\n   .catch(err => {throw err});\n}","import * as API from '../api';\n\nexport function signUp(cred, cb){\n   return (dispatch, prevState) => {\n      API.signUp(cred)\n      .then((newUser) => dispatch({type: 'SIGN_UP', User: newUser}))\n      .then(() => {\n         if (cb) cb();\n      }).catch(err => {\n         dispatch({type: 'LOGIN_ERROR', description: err});\n         console.log('Error is ', err)\n      });\n   };\n}\n\nexport function signIn(cred, cb) {  \n   return (dispatch, prevState) => {\n      API.logIn(cred)\n      .then((userInfo) => dispatch({type: 'LOGIN', user: userInfo}))\n      .then(() => {if (cb) cb();})\n      .catch(err => {console.log('err is',err);dispatch({type: 'LOGIN_ERR', \n       details: err})});\n      \n   };\n}","import React from 'react';\nimport { Nav, Navbar, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar { background-color: #222; }\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .ml-auto {\n    padding-right: 50px\n  }\n`;\n\nexport const NavigationBar = props => (\n  <Styles>\n    <Navbar expand=\"lg\" variant=\"dark\">\n      <Navbar.Brand className=\"navbarlogo\" href=\"#Home\">\n         <img src={require('../../DeBestRoboticsLogo.png')} \n         width=\"90\"\n         height=\"70\"\n         className=\"d-inline-block align-top\"/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <NavDropdown title=\"The Team\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">About Us</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Join DeBest Robotics</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Awards</NavDropdown.Item>\n          </NavDropdown>\n\n          <Nav>\n            <LinkContainer to='/about'>\n            <Nav.Link>TESTING</Nav.Link>\n            </LinkContainer>\n          </Nav>\n          \n          <Nav.Item><Nav.Link href=\"/store\">Store</Nav.Link></Nav.Item> \n          <Nav.Item><Nav.Link href=\"/contact\">Contact</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link href=\"/login\">Log In</Nav.Link></Nav.Item> \n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)\n\nexport default NavigationBar;\n","import React, { Component } from 'react';\nimport {Route, Redirect, Switch } from 'react-router-dom';\nimport {Navbar, Nav, NavItem, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {NavigationBar} from '../../components';\nimport './AboutUs.css';\n   \nexport default class AboutUs extends Component {\n   constructor(props) {\n      super(props);\n   }\n   render() {\n      console.log(\"Redrawing About Us\");\n      return (\n         <div className=\"aboutUsNavBar\">\n            <div className=\"aboutUsTxt\">\n            <h1>TESTING ROUTES</h1>\n            <p>DeBest robotics is a robotics program associated with the Pegasus School in Huntington Beach, CA.  \n               We are teaching young minds the keys to solving problems and how to work with a team to accomplish a common goal.\n            </p>\n         </div>\n          \n         </div>\n      )\n   }\n}\n","import React, {Component} from 'react';\nimport {Form, FormGroup, Row, Col, FormControl, Button} from 'react-bootstrap';\nimport './LogIn.css';\n\nclass LogIn extends Component {\n   constructor(props) {\n      super(props);\n\n      // Current login state\n      this.state = {\n         email: 'adm@11.com',\n         password: 'password'\n      }\n\n       // bind 'this' to the correct context\n       this.handleChange = this.handleChange.bind(this);\n       this.logIn = this.logIn.bind(this);\n   } \n\n   // Call redux actionCreator login via props.\n   logIn(event) {\n      console.log(\"Component login with \" + this.state.email);\n      event.preventDefault()\n   }\n\n   closeErrorConf = (btn) => {\n      this.props.clearErrors();\n   }\n\n   // Continually update state as letters typed. Rerenders, but no DOM change!\n   handleChange(event) {\n      const newState = {}\n      newState[event.target.name] = event.target.value;\n      this.setState(newState);\n      console.log(newState);\n   }\n\n   render() {\n      console.log(\"Rendering logIn\");\n      return (\n         <section className=\"container\">\n            <Col sm={{offset: 2}}>\n               <h1>Log in</h1>\n            </Col>\n            <Form>\n               <FormGroup as={Row} controlId=\"formHorizontalEmail\">\n                  <Col as={Form.Label} sm={2}>\n                     Email\n                  </Col>\n                  <Col sm={8}>\n                     <FormControl\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                      />\n                  </Col>\n               </FormGroup>\n               <FormGroup as={Row} controlId=\"formHorizontalPassword\">\n                  <Col as={Form.Label} sm={2}>\n                     Password\n                  </Col>\n                  <Col sm={8}>\n                     <FormControl\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                     />\n                  </Col>\n               </FormGroup>\n           \n               <FormGroup >\n                  <Col sm={{offset: 2}}>\n                     <Button className=\"loginbutton\" type=\"submit\" onClick={this.logIn}>\n                        Sign in\n                     </Button>\n                 </Col>\n               </FormGroup>\n            </Form>\n\n      \n         </section>\n      )\n   }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport {Route, Redirect, Switch } from 'react-router-dom';\nimport {browserHistory} from 'react-router';\nimport {Navbar, Nav, NavDropdown, NavItem, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {NavigationBar, Carousel, AboutUs, LogIn} from '../components';\nimport styled from 'styled-components';\nimport './Home.css';\n\nvar ProtectedRoute = ({component: Cmp, path, ...rest }) => {\n   return (<Route path={path} render={(props) => {\n      return Object.keys(rest.User).length !== 0 ?\n      <Cmp {...rest}/> : <Redirect to='/login'/>;}}/>);\n   };\n\nconst Styles = styled.div`\n   .navbar { background-color: #222; }\n   a, .navbar-nav, .navbar-light .nav-link {\n     color: #9FFFCB;\n     &:hover { color: white; }\n   }\n   .navbar-brand {\n     font-size: 1.4em;\n     color: #9FFFCB;\n     &:hover { color: white; }\n   }\n   .ml-auto {\n     padding-right: 50px\n   }\n `;\n   \nclass Home extends Component {\n   constructor(props){\n      super(props);\n   }\n    signedIn() {\n       return Object.keys(this.props.User).length !== 0; // Nonempty User obj\n    }\n/*    state = {\n      activeSlideIndex: 0,\n   }\n   setActiveSlideIndex = (newActiveSlideIndex) => {\n      this.setState({\n        activeSlideIndex: newActiveSlideIndex\n      });\n    } */\n   render() {\n      console.log(\"Redrawing homepage\");\n      return (\n         <div className=\"homeNavBar\">\n\n            {/* NAVIGATION BAR*/}\n            <Styles>\n            <Navbar expand=\"lg\" variant=\"dark\">\n               <Navbar.Brand className=\"navbarlogo\" href=\"#Home\">\n                  <img src={require('../../DeBestRoboticsLogo.png')} \n                  width=\"90\"\n                  height=\"70\"\n                  className=\"d-inline-block align-top\"/>\n               </Navbar.Brand>\n               <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n               <Navbar.Collapse id=\"basic-navbar-nav\">\n               <Nav className=\"ml-auto\">\n                  <NavDropdown title=\"The Team\" id=\"basic-nav-dropdown\">\n                     <NavDropdown.Item href=\"#action/3.1\">About Us</NavDropdown.Item>\n                     <NavDropdown.Item href=\"#action/3.2\">Join DeBest Robotics</NavDropdown.Item>\n                     <NavDropdown.Item href=\"#action/3.3\">Awards</NavDropdown.Item>\n                  </NavDropdown>\n\n                  <Nav>\n                     <LinkContainer to='/about'>\n                     <Nav.Link>TESTING</Nav.Link>\n                     </LinkContainer>\n                  </Nav>\n                  \n                  <Nav.Item><Nav.Link href=\"/store\">Store</Nav.Link></Nav.Item> \n                  <Nav.Item><Nav.Link href=\"/contact\">Contact</Nav.Link></Nav.Item>\n                  <Nav.Item><Nav.Link href=\"/login\">Log In</Nav.Link></Nav.Item> \n               </Nav>\n               </Navbar.Collapse>\n            </Navbar>\n         </Styles>\n\n         <div>\n         <br></br>\n         </div>\n         <div className=\"hometxt\">\n         <h1>ABOUT US</h1>\n         <p>DeBest robotics is a robotics program associated with the Pegasus School in Huntington Beach, CA.  \n            We are teaching young minds the keys to solving problems and how to work with a team to accomplish a common goal.\n         </p>\n         </div>\n\n            {/*Alternate pages beneath navbar, based on current route*/}\n            <Switch>\n               <Route path='/login' \n                  render={() => <LogIn {...this.props} />} />\n               <Route path='/about' component={AboutUs} />\n\n            </Switch>\n\n          \n         </div>\n      )\n   }\n}\n\nexport default Home","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/actions';\nimport React, { Component } from 'react';\n//import {Route, Redirect, Switch, withRouter } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport {Navbar, Nav, NavItem, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Home from './components/Home/Home';\n\nfunction mapStateToProps(state){\n    console.log(\"State is \" + JSON.stringify(state));\n    return {\n        Users: state.Users\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actions, dispatch);\n}\n\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n     // [::1] is the IPv6 localhost address.\n     window.location.hostname === '[::1]' ||\n     // 127.0.0.1/8 is considered localhost for IPv4.\n     window.location.hostname.match(\n       /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n     )\n );\n \n export function register(config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n     // The URL constructor is available in all browsers that support SW.\n     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n     if (publicUrl.origin !== window.location.origin) {\n       // Our service worker won't work if PUBLIC_URL is on a different origin\n       // from what our page is served on. This might happen if a CDN is used to\n       // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n       return;\n     }\n \n     window.addEventListener('load', () => {\n       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n \n       if (isLocalhost) {\n         // This is running on localhost. Let's check if a service worker still exists or not.\n         checkValidServiceWorker(swUrl, config);\n \n         // Add some additional logging to localhost, pointing developers to the\n         // service worker/PWA documentation.\n         navigator.serviceWorker.ready.then(() => {\n           console.log(\n             'This web app is being served cache-first by a service ' +\n               'worker. To learn more, visit https://bit.ly/CRA-PWA'\n           );\n         });\n       } else {\n         // Is not localhost. Just register service worker\n         registerValidSW(swUrl, config);\n       }\n     });\n   }\n }\n \n function registerValidSW(swUrl, config) {\n   navigator.serviceWorker\n     .register(swUrl)\n     .then(registration => {\n       registration.onupdatefound = () => {\n         const installingWorker = registration.installing;\n         if (installingWorker == null) {\n           return;\n         }\n         installingWorker.onstatechange = () => {\n           if (installingWorker.state === 'installed') {\n             if (navigator.serviceWorker.controller) {\n               // At this point, the updated precached content has been fetched,\n               // but the previous service worker will still serve the older\n               // content until all client tabs are closed.\n               console.log(\n                 'New content is available and will be used when all ' +\n                   'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n               );\n \n               // Execute callback\n               if (config && config.onUpdate) {\n                 config.onUpdate(registration);\n               }\n             } else {\n               // At this point, everything has been precached.\n               // It's the perfect time to display a\n               // \"Content is cached for offline use.\" message.\n               console.log('Content is cached for offline use.');\n \n               // Execute callback\n               if (config && config.onSuccess) {\n                 config.onSuccess(registration);\n               }\n             }\n           }\n         };\n       };\n     })\n     .catch(error => {\n       console.error('Error during service worker registration:', error);\n     });\n }\n \n function checkValidServiceWorker(swUrl, config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n     .then(response => {\n       // Ensure service worker exists, and that we really are getting a JS file.\n       const contentType = response.headers.get('content-type');\n       if (\n         response.status === 404 ||\n         (contentType != null && contentType.indexOf('javascript') === -1)\n       ) {\n         // No service worker found. Probably a different app. Reload the page.\n         navigator.serviceWorker.ready.then(registration => {\n           registration.unregister().then(() => {\n             window.location.reload();\n           });\n         });\n       } else {\n         // Service worker found. Proceed as normal.\n         registerValidSW(swUrl, config);\n       }\n     })\n     .catch(() => {\n       console.log(\n         'No internet connection found. App is running in offline mode.'\n       );\n     });\n }\n \n export function unregister() {\n   if ('serviceWorker' in navigator) {\n     navigator.serviceWorker.ready.then(registration => {\n       registration.unregister();\n     });\n   }\n }\n ","function Users(state = {}, action) {\n   console.log(\"User reducing action \" + action.type);\n   switch(action.type) {\n   case 'LOGIN':\n      return action.user;\n   case 'LOGOUT':\n      return {}; // Clear user state\n   case 'LOGIN_ERROR':\n      return action;\n   default:\n      return state;\n   }\n}\n\nexport default Users;","import { combineReducers } from 'redux';\nimport Users from './Users';\nimport Errs from './Errs';\n\nconst rootReducer = combineReducers({Users, Errs});\nexport default rootReducer;","export default function Errs(state = [], action) {\n   switch(action.type) {\n      case 'LOGIN_ERROR':\n         return action.details;\n      case 'SIGNUP_ERROR':\n         return action.details;\n      case 'CLEAR_ERRORS':\n         return [];\n      default:\n         return state;\n   }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/index';\n\n//function myCompose(){\n//   return composeWithDevTools(applyMiddleware(thunk));}\n \nconst initState = {};\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunk)));\n\nif (module.hot) {\n   module.hot.accept('./reducers/',() => {\n      const nextRootReducer = require('./reducers/index').default;\n      store.replaceReducer(nextRootReducer);\n   });\n}\n\nexport const history = createBrowserHistory();\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.css'; // Bootstrap\nimport './index.css';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. \nserviceWorker.unregister();\n\nconst router = (\n   <Provider store={store}>\n      <BrowserRouter>\n         <App/>\n      </BrowserRouter>\n   </Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n"],"sourceRoot":""}
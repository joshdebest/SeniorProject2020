{"ast":null,"code":"import*as API from'../api';export function signUp(cred,cb){return function(dispatch,prevState){API.signUp(cred).then(function(newUser){return dispatch({type:'SIGN_UP',User:newUser});}).then(function(){if(cb)cb();}).catch(function(err){dispatch({type:'LOGIN_ERROR',description:err});console.log('Error is ',err);});};}export function signIn(cred,cb){return function(dispatch,prevState){API.logIn(cred).then(function(userInfo){return dispatch({type:'LOGIN',user:userInfo});}).then(function(){if(cb)cb();}).catch(function(err){console.log('err is',err);dispatch({type:'LOGIN_ERR',details:err});});};}","map":{"version":3,"sources":["/Users/joshdebest/SeniorProject2020/ClientSide/src/actions/actions.js"],"names":["API","signUp","cred","cb","dispatch","prevState","then","newUser","type","User","catch","err","description","console","log","signIn","logIn","userInfo","user","details"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,QAArB,CAEA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsBC,EAAtB,CAAyB,CAC7B,MAAO,UAACC,QAAD,CAAWC,SAAX,CAAyB,CAC7BL,GAAG,CAACC,MAAJ,CAAWC,IAAX,EACCI,IADD,CACM,SAACC,OAAD,QAAaH,CAAAA,QAAQ,CAAC,CAACI,IAAI,CAAE,SAAP,CAAkBC,IAAI,CAAEF,OAAxB,CAAD,CAArB,EADN,EAECD,IAFD,CAEM,UAAM,CACT,GAAIH,EAAJ,CAAQA,EAAE,GACZ,CAJD,EAIGO,KAJH,CAIS,SAAAC,GAAG,CAAI,CACbP,QAAQ,CAAC,CAACI,IAAI,CAAE,aAAP,CAAsBI,WAAW,CAAED,GAAnC,CAAD,CAAR,CACAE,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBH,GAAzB,EACF,CAPD,EAQF,CATD,CAUF,CAED,MAAO,SAASI,CAAAA,MAAT,CAAgBb,IAAhB,CAAsBC,EAAtB,CAA0B,CAC9B,MAAO,UAACC,QAAD,CAAWC,SAAX,CAAyB,CAC7BL,GAAG,CAACgB,KAAJ,CAAUd,IAAV,EACCI,IADD,CACM,SAACW,QAAD,QAAcb,CAAAA,QAAQ,CAAC,CAACI,IAAI,CAAE,OAAP,CAAgBU,IAAI,CAAED,QAAtB,CAAD,CAAtB,EADN,EAECX,IAFD,CAEM,UAAM,CAAC,GAAIH,EAAJ,CAAQA,EAAE,GAAI,CAF3B,EAGCO,KAHD,CAGO,SAAAC,GAAG,CAAI,CAACE,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAqBH,GAArB,EAA0BP,QAAQ,CAAC,CAACI,IAAI,CAAE,WAAP,CACjDW,OAAO,CAAER,GADwC,CAAD,CAAR,CACzB,CAJhB,EAMF,CAPD,CAQF","sourcesContent":["import * as API from '../api';\n\nexport function signUp(cred, cb){\n   return (dispatch, prevState) => {\n      API.signUp(cred)\n      .then((newUser) => dispatch({type: 'SIGN_UP', User: newUser}))\n      .then(() => {\n         if (cb) cb();\n      }).catch(err => {\n         dispatch({type: 'LOGIN_ERROR', description: err});\n         console.log('Error is ', err)\n      });\n   };\n}\n\nexport function signIn(cred, cb) {  \n   return (dispatch, prevState) => {\n      API.logIn(cred)\n      .then((userInfo) => dispatch({type: 'LOGIN', user: userInfo}))\n      .then(() => {if (cb) cb();})\n      .catch(err => {console.log('err is',err);dispatch({type: 'LOGIN_ERR', \n       details: err})});\n      \n   };\n}"]},"metadata":{},"sourceType":"module"}
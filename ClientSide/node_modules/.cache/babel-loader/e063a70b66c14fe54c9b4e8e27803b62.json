{"ast":null,"code":"// Interface to the REST server\nvar baseURL=\"http://localhost:3001/\";//const baseURL = \"http://www.debestrobotics.com/\";\nvar currSessionCookie;var headers=new Headers();headers.set('Content-Type','application/JSON');function myFetch(method,endpoint,body){return fetch(baseURL+endpoint,{method:method,body:body?JSON.stringify(body):null,headers:headers,credentials:'include'}).catch(function(err){throw err;});}export function post(endpoint,body){return myFetch('POST',endpoint,body);}// GET/Usr/{email}\nexport function get(endpoint,body){return myFetch('GET',endpoint,body);}// GET/Usr \n//export function get(endpoint){\n//   return myFetch('GET', endpoint);\n//}\nexport function put(endpoint,body){return myFetch('PUT',endpoint,body);}export function del(endpoint){return myFetch('DELETE',endpoint);}//  Functions for api requests\n/**\n * Register a user\n * @param {Object} User info\n * @returns {Promise resolving to new user registration}\n */export function signUp(info){return post('Usr',info).catch(function(err){throw err;});}export function logIn(creds){return post('Ssns',creds).catch(function(err){throw err;});}export function logOut(){return del('Ssns/'+currSessionCookie).catch(function(err){throw err;});}/**\n * @param User email to index database\n * @returns {Promise} json parsed data\n */export function getUser(email){return get('Usr/'+email).then(function(res){return res.json();}).catch(function(err){throw err;});}","map":{"version":3,"sources":["/Users/joshdebest/SeniorProject2020/ClientSide/src/api.js"],"names":["baseURL","currSessionCookie","headers","Headers","set","myFetch","method","endpoint","body","fetch","JSON","stringify","credentials","catch","err","post","get","put","del","signUp","info","logIn","creds","logOut","getUser","email","then","res","json"],"mappings":"AAAA;AAEA,GAAMA,CAAAA,OAAO,CAAG,wBAAhB,CACA;AAEA,GAAIC,CAAAA,iBAAJ,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,EAAhB,CACAD,OAAO,CAACE,GAAR,CAAY,cAAZ,CAA4B,kBAA5B,EAGA,QAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAyBC,QAAzB,CAAmCC,IAAnC,CAAwC,CACrC,MAAOC,CAAAA,KAAK,CAACT,OAAO,CAAGO,QAAX,CAAqB,CAC9BD,MAAM,CAAEA,MADsB,CAE9BE,IAAI,CAAGA,IAAI,CAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAH,CAA0B,IAFP,CAG9BN,OAAO,CAAEA,OAHqB,CAI9BU,WAAW,CAAE,SAJiB,CAArB,CAAL,CAKJC,KALI,CAKE,SAAAC,GAAG,CAAI,CAAC,KAAMA,CAAAA,GAAN,CAAU,CALpB,CAAP,CAMF,CAED,MAAO,SAASC,CAAAA,IAAT,CAAcR,QAAd,CAAwBC,IAAxB,CAA6B,CACjC,MAAOH,CAAAA,OAAO,CAAC,MAAD,CAASE,QAAT,CAAmBC,IAAnB,CAAd,CACF,CACD;AACA,MAAO,SAASQ,CAAAA,GAAT,CAAaT,QAAb,CAAuBC,IAAvB,CAA4B,CAChC,MAAOH,CAAAA,OAAO,CAAC,KAAD,CAAQE,QAAR,CAAkBC,IAAlB,CAAd,CACF,CACD;AACA;AACA;AACA;AAEA,MAAO,SAASS,CAAAA,GAAT,CAAaV,QAAb,CAAuBC,IAAvB,CAA4B,CAChC,MAAOH,CAAAA,OAAO,CAAC,KAAD,CAAQE,QAAR,CAAkBC,IAAlB,CAAd,CACF,CACD,MAAO,SAASU,CAAAA,GAAT,CAAaX,QAAb,CAAsB,CAC1B,MAAOF,CAAAA,OAAO,CAAC,QAAD,CAAWE,QAAX,CAAd,CACF,CAED;AAEA;;;;GAKA,MAAO,SAASY,CAAAA,MAAT,CAAgBC,IAAhB,CAAqB,CACzB,MAAOL,CAAAA,IAAI,CAAC,KAAD,CAAQK,IAAR,CAAJ,CAAkBP,KAAlB,CAAwB,SAAAC,GAAG,CAAI,CAAC,KAAMA,CAAAA,GAAN,CAAU,CAA1C,CAAP,CACF,CAED,MAAO,SAASO,CAAAA,KAAT,CAAeC,KAAf,CAAqB,CACzB,MAAOP,CAAAA,IAAI,CAAC,MAAD,CAASO,KAAT,CAAJ,CAAoBT,KAApB,CAA0B,SAAAC,GAAG,CAAI,CAAC,KAAMA,CAAAA,GAAN,CAAU,CAA5C,CAAP,CACF,CAED,MAAO,SAASS,CAAAA,MAAT,EAAiB,CACrB,MAAOL,CAAAA,GAAG,CAAC,QAAUjB,iBAAX,CAAH,CAAiCY,KAAjC,CAAuC,SAAAC,GAAG,CAAI,CAAC,KAAMA,CAAAA,GAAN,CAAU,CAAzD,CAAP,CACF,CAED;;;GAIA,MAAO,SAASU,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CAC5B,MAAOT,CAAAA,GAAG,CAAE,OAASS,KAAX,CAAH,CACNC,IADM,CACD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADF,EAENf,KAFM,CAEA,SAAAC,GAAG,CAAI,CAAC,KAAMA,CAAAA,GAAN,CAAU,CAFlB,CAAP,CAGF","sourcesContent":["// Interface to the REST server\n\nconst baseURL = \"http://localhost:3001/\";\n//const baseURL = \"http://www.debestrobotics.com/\";\n\nvar currSessionCookie;\nconst headers = new Headers();\nheaders.set('Content-Type', 'application/JSON');\n\n\nfunction myFetch(method, endpoint, body){\n   return fetch(baseURL + endpoint, {\n      method: method,\n      body: (body ? JSON.stringify(body) : null),\n      headers: headers,\n      credentials: 'include'\n   }).catch(err => {throw err});\n}\n\nexport function post(endpoint, body){\n   return myFetch('POST', endpoint, body);\n}\n// GET/Usr/{email}\nexport function get(endpoint, body){\n   return myFetch('GET', endpoint, body);\n}\n// GET/Usr \n//export function get(endpoint){\n//   return myFetch('GET', endpoint);\n//}\n\nexport function put(endpoint, body){\n   return myFetch('PUT', endpoint, body);\n}\nexport function del(endpoint){\n   return myFetch('DELETE', endpoint);\n}\n\n//  Functions for api requests\n\n/**\n * Register a user\n * @param {Object} User info\n * @returns {Promise resolving to new user registration}\n */\nexport function signUp(info){\n   return post('Usr', info).catch(err => {throw err});\n}\n\nexport function logIn(creds){\n   return post('Ssns', creds).catch(err => {throw err});\n}\n\nexport function logOut(){\n   return del('Ssns/' + currSessionCookie).catch(err => {throw err});\n}\n\n/**\n * @param User email to index database\n * @returns {Promise} json parsed data\n */\nexport function getUser(email) {\n   return get ('Usr/' + email)\n   .then(res => res.json())\n   .catch(err => {throw err});\n}"]},"metadata":{},"sourceType":"module"}
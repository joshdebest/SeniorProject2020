{"ast":null,"code":"// Interface to the REST server\nconst baseURL = \"http://localhost:3001/\"; //const baseURL = \"http://www.debestrobotics.com/\";\n\nvar currSessionCookie;\nconst headers = new Headers();\nheaders.set('Content-Type', 'application/JSON');\n\nfunction myFetch(method, endpoint, body) {\n  return fetch(baseURL + endpoint, {\n    method: method,\n    body: JSON.stringify(body),\n    headers: headers,\n    credentials: 'include'\n  }).catch(err => {\n    throw err;\n  });\n}\n\nexport function post(endpoint, body) {\n  return myFetch('POST', endpoint, body);\n}\nexport function get(endpoint, body) {\n  return myFetch('GET', endpoint, body);\n}\nexport function put(endpoint, body) {\n  return myFetch('PUT', endpoint, body);\n}\nexport function del(endpoint) {\n  return myFetch('DELETE', endpoint);\n} //  Functions for api requests\n\n/**\n * Register a user\n * @param {Object} User info\n * @returns {Promise resolving to new user registration}\n */\n\nexport function signUp(info) {\n  return post('Usr', info).catch(err => {\n    throw err;\n  });\n}\nexport function logIn(creds) {\n  return post('Ssns', creds).catch(err => {\n    throw err;\n  });\n}\nexport function logOut() {\n  return del('Ssns/' + currSessionCookie).catch(err => {\n    throw err;\n  });\n}\n/**\n * @returns {Promise} json parsed data\n */\n\nexport function getUser(email) {\n  return get('Usr/' + email).then(res => res.json()).catch(err => {\n    throw err;\n  });\n}","map":{"version":3,"sources":["/Users/joshdebest/SeniorProject2020/ClientSide/src/api.js"],"names":["baseURL","currSessionCookie","headers","Headers","set","myFetch","method","endpoint","body","fetch","JSON","stringify","credentials","catch","err","post","get","put","del","signUp","info","logIn","creds","logOut","getUser","email","then","res","json"],"mappings":"AAAA;AAEA,MAAMA,OAAO,GAAG,wBAAhB,C,CACA;;AAEA,IAAIC,iBAAJ;AACA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACAD,OAAO,CAACE,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;;AAGA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,IAAnC,EAAwC;AACrC,SAAOC,KAAK,CAACT,OAAO,GAAGO,QAAX,EAAqB;AAC9BD,IAAAA,MAAM,EAAEA,MADsB;AAE9BE,IAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAFwB;AAG9BN,IAAAA,OAAO,EAAEA,OAHqB;AAI9BU,IAAAA,WAAW,EAAE;AAJiB,GAArB,CAAL,CAKJC,KALI,CAKEC,GAAG,IAAI;AAAC,UAAMA,GAAN;AAAU,GALpB,CAAP;AAMF;;AAED,OAAO,SAASC,IAAT,CAAcR,QAAd,EAAwBC,IAAxB,EAA6B;AACjC,SAAOH,OAAO,CAAC,MAAD,EAASE,QAAT,EAAmBC,IAAnB,CAAd;AACF;AACD,OAAO,SAASQ,GAAT,CAAaT,QAAb,EAAuBC,IAAvB,EAA4B;AAChC,SAAOH,OAAO,CAAC,KAAD,EAAQE,QAAR,EAAkBC,IAAlB,CAAd;AACF;AACD,OAAO,SAASS,GAAT,CAAaV,QAAb,EAAuBC,IAAvB,EAA4B;AAChC,SAAOH,OAAO,CAAC,KAAD,EAAQE,QAAR,EAAkBC,IAAlB,CAAd;AACF;AACD,OAAO,SAASU,GAAT,CAAaX,QAAb,EAAsB;AAC1B,SAAOF,OAAO,CAAC,QAAD,EAAWE,QAAX,CAAd;AACF,C,CAED;;AAEA;;;;;;AAKA,OAAO,SAASY,MAAT,CAAgBC,IAAhB,EAAqB;AACzB,SAAOL,IAAI,CAAC,KAAD,EAAQK,IAAR,CAAJ,CAAkBP,KAAlB,CAAwBC,GAAG,IAAI;AAAC,UAAMA,GAAN;AAAU,GAA1C,CAAP;AACF;AACD,OAAO,SAASO,KAAT,CAAeC,KAAf,EAAqB;AACzB,SAAOP,IAAI,CAAC,MAAD,EAASO,KAAT,CAAJ,CAAoBT,KAApB,CAA0BC,GAAG,IAAI;AAAC,UAAMA,GAAN;AAAU,GAA5C,CAAP;AACF;AACD,OAAO,SAASS,MAAT,GAAiB;AACrB,SAAOL,GAAG,CAAC,UAAUjB,iBAAX,CAAH,CAAiCY,KAAjC,CAAuCC,GAAG,IAAI;AAAC,UAAMA,GAAN;AAAU,GAAzD,CAAP;AACF;AAED;;;;AAGA,OAAO,SAASU,OAAT,CAAiBC,KAAjB,EAAwB;AAC5B,SAAOT,GAAG,CAAE,SAASS,KAAX,CAAH,CACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENf,KAFM,CAEAC,GAAG,IAAI;AAAC,UAAMA,GAAN;AAAU,GAFlB,CAAP;AAGF","sourcesContent":["// Interface to the REST server\n\nconst baseURL = \"http://localhost:3001/\";\n//const baseURL = \"http://www.debestrobotics.com/\";\n\nvar currSessionCookie;\nconst headers = new Headers();\nheaders.set('Content-Type', 'application/JSON');\n\n\nfunction myFetch(method, endpoint, body){\n   return fetch(baseURL + endpoint, {\n      method: method,\n      body: JSON.stringify(body),\n      headers: headers,\n      credentials: 'include'\n   }).catch(err => {throw err});\n}\n\nexport function post(endpoint, body){\n   return myFetch('POST', endpoint, body);\n}\nexport function get(endpoint, body){\n   return myFetch('GET', endpoint, body);\n}\nexport function put(endpoint, body){\n   return myFetch('PUT', endpoint, body);\n}\nexport function del(endpoint){\n   return myFetch('DELETE', endpoint, );\n}\n\n//  Functions for api requests\n\n/**\n * Register a user\n * @param {Object} User info\n * @returns {Promise resolving to new user registration}\n */\nexport function signUp(info){\n   return post('Usr', info).catch(err => {throw err});\n}\nexport function logIn(creds){\n   return post('Ssns', creds).catch(err => {throw err});\n}\nexport function logOut(){\n   return del('Ssns/' + currSessionCookie).catch(err => {throw err});\n}\n\n/**\n * @returns {Promise} json parsed data\n */\nexport function getUser(email) {\n   return get ('Usr/' + email)\n   .then(res => res.json())\n   .catch(err => {throw err});\n}"]},"metadata":{},"sourceType":"module"}
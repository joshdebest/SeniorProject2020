{"ast":null,"code":"/*\n * Higher-Order fuctions for processing events from Google Calendar\n */\n// filterByOneProperty :: String -> [{}] -> [{}]\nconst filterByOneProperty = (propterty, events) => events.filter(event => event.r[0] == propterty); // filterIncludesString :: [] -> String -> Bool\n\n\nconst filterIncludesString = (filters, str) => filters[filters.length - 1].includes(str); // oneTime :: String -> [{}] -> [{}]\n\n\nconst oneTime = (calendar, events) => events.filter(item => !item.recurrence).map(e => {\n  // account for all day events and arbitrarily set time to 8am-5pm\n  const start = e.start.date ? new Date(`${e.start.date}T08:00:00`) : new Date(e.start.dateTime);\n  const end = e.end.date ? new Date(`${e.start.date}T05:00:00`) : new Date(e.end.dateTime);\n  return {\n    title: e.summary,\n    eventType: calendar.name,\n    start: start,\n    end: end,\n    description: e.description,\n    location: e.location,\n    glink: e.htmlLink,\n    meta: e\n  };\n}); // recurring :: [{}] -> [{}]\n\n\nconst recurring = events => events.filter(item => item.recurrence).map(event => ({\n  e: event,\n  r: event.recurrence[0].split(';')\n})); // recurringByProperty :: [{}] -> Function -> String -> Int -> [{}]\n\n\nconst recurringByProperty = (events, fn, calendar, occurences) => [].concat.apply([], events).map(event => fn(calendar, occurences, event)); // removeCancelled :: [{}] -> [{}]\n\n\nconst removeCancelled = events => events.filter(item => item.status != \"cancelled\"); // removeRecurrenceProperty :: [{}] -> [{}]\n\n\nconst removeRecurrenceProperty = events => events.map(event => event.e);\n\nmodule.exports = {\n  filterByOneProperty,\n  filterIncludesString,\n  oneTime,\n  recurring,\n  recurringByProperty,\n  removeCancelled,\n  removeRecurrenceProperty\n};","map":{"version":3,"sources":["/Users/joshdebest/SeniorProject2020/ClientSide/src/components/Pages/Calendar/utils/functions.js"],"names":["filterByOneProperty","propterty","events","filter","event","r","filterIncludesString","filters","str","length","includes","oneTime","calendar","item","recurrence","map","e","start","date","Date","dateTime","end","title","summary","eventType","name","description","location","glink","htmlLink","meta","recurring","split","recurringByProperty","fn","occurences","concat","apply","removeCancelled","status","removeRecurrenceProperty","module","exports"],"mappings":"AAAA;;;AAIA;AACA,MAAMA,mBAAmB,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuBA,MAAM,CACtDC,MADgD,CACzCC,KAAK,IAAIA,KAAK,CAACC,CAAN,CAAQ,CAAR,KAAcJ,SADkB,CAAnD,C,CAGA;;;AACA,MAAMK,oBAAoB,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkBD,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAAP,CAA4BC,QAA5B,CAAqCF,GAArC,CAA/C,C,CAEA;;;AACA,MAAMG,OAAO,GAAG,CAACC,QAAD,EAAWV,MAAX,KAAsBA,MAAM,CACzCC,MADmC,CAC5BU,IAAI,IAAI,CAACA,IAAI,CAACC,UADc,EAEnCC,GAFmC,CAE/BC,CAAC,IAAI;AACR;AACA,QAAMC,KAAK,GAAGD,CAAC,CAACC,KAAF,CAAQC,IAAR,GACV,IAAIC,IAAJ,CAAU,GAAEH,CAAC,CAACC,KAAF,CAAQC,IAAK,WAAzB,CADU,GAEV,IAAIC,IAAJ,CAASH,CAAC,CAACC,KAAF,CAAQG,QAAjB,CAFJ;AAGA,QAAMC,GAAG,GAAGL,CAAC,CAACK,GAAF,CAAMH,IAAN,GACR,IAAIC,IAAJ,CAAU,GAAEH,CAAC,CAACC,KAAF,CAAQC,IAAK,WAAzB,CADQ,GAER,IAAIC,IAAJ,CAASH,CAAC,CAACK,GAAF,CAAMD,QAAf,CAFJ;AAIA,SAAO;AACLE,IAAAA,KAAK,EAAEN,CAAC,CAACO,OADJ;AAELC,IAAAA,SAAS,EAAEZ,QAAQ,CAACa,IAFf;AAGLR,IAAAA,KAAK,EAAEA,KAHF;AAILI,IAAAA,GAAG,EAAEA,GAJA;AAKLK,IAAAA,WAAW,EAAEV,CAAC,CAACU,WALV;AAMLC,IAAAA,QAAQ,EAAEX,CAAC,CAACW,QANP;AAOLC,IAAAA,KAAK,EAAEZ,CAAC,CAACa,QAPJ;AAQLC,IAAAA,IAAI,EAAEd;AARD,GAAP;AAUD,CArBmC,CAAtC,C,CAuBA;;;AACA,MAAMe,SAAS,GAAG7B,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAcU,IAAI,IAAIA,IAAI,CAACC,UAA3B,EACzBC,GADyB,CACrBX,KAAK,KAAK;AAAEY,EAAAA,CAAC,EAAEZ,KAAL;AAAYC,EAAAA,CAAC,EAAED,KAAK,CAACU,UAAN,CAAiB,CAAjB,EAAoBkB,KAApB,CAA0B,GAA1B;AAAf,CAAL,CADgB,CAA5B,C,CAGA;;;AACA,MAAMC,mBAAmB,GAAG,CAAC/B,MAAD,EAASgC,EAAT,EAAatB,QAAb,EAAuBuB,UAAvB,KAAsC,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBnC,MAApB,EAC/Da,GAD+D,CAC3DX,KAAK,IAAI8B,EAAE,CAACtB,QAAD,EAAWuB,UAAX,EAAuB/B,KAAvB,CADgD,CAAlE,C,CAGA;;;AACA,MAAMkC,eAAe,GAAGpC,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAcU,IAAI,IAAIA,IAAI,CAAC0B,MAAL,IAAe,WAArC,CAAlC,C,CAEA;;;AACA,MAAMC,wBAAwB,GAAGtC,MAAM,IAAIA,MAAM,CAACa,GAAP,CAAWX,KAAK,IAAIA,KAAK,CAACY,CAA1B,CAA3C;;AAEAyB,MAAM,CAACC,OAAP,GAAiB;AACf1C,EAAAA,mBADe;AAEfM,EAAAA,oBAFe;AAGfK,EAAAA,OAHe;AAIfoB,EAAAA,SAJe;AAKfE,EAAAA,mBALe;AAMfK,EAAAA,eANe;AAOfE,EAAAA;AAPe,CAAjB","sourcesContent":["/*\n * Higher-Order fuctions for processing events from Google Calendar\n */\n\n// filterByOneProperty :: String -> [{}] -> [{}]\nconst filterByOneProperty = (propterty, events) => events\n  .filter(event => event.r[0] == propterty)\n\n// filterIncludesString :: [] -> String -> Bool\nconst filterIncludesString = (filters, str) => filters[filters.length - 1].includes(str)\n\n// oneTime :: String -> [{}] -> [{}]\nconst oneTime = (calendar, events) => events\n  .filter(item => !item.recurrence)\n  .map(e => {\n    // account for all day events and arbitrarily set time to 8am-5pm\n    const start = e.start.date\n      ? new Date(`${e.start.date}T08:00:00`)\n      : new Date(e.start.dateTime)\n    const end = e.end.date\n      ? new Date(`${e.start.date}T05:00:00`)\n      : new Date(e.end.dateTime)\n\n    return {\n      title: e.summary,\n      eventType: calendar.name,\n      start: start,\n      end: end,\n      description: e.description,\n      location: e.location,\n      glink: e.htmlLink,\n      meta: e\n    }\n  })\n\n// recurring :: [{}] -> [{}]\nconst recurring = events => events.filter(item => item.recurrence)\n  .map(event => ({ e: event, r: event.recurrence[0].split(';') }))\n\n// recurringByProperty :: [{}] -> Function -> String -> Int -> [{}]\nconst recurringByProperty = (events, fn, calendar, occurences) => [].concat.apply([], events)\n  .map(event => fn(calendar, occurences, event))\n\n// removeCancelled :: [{}] -> [{}]\nconst removeCancelled = events => events.filter(item => item.status != \"cancelled\")\n\n// removeRecurrenceProperty :: [{}] -> [{}]\nconst removeRecurrenceProperty = events => events.map(event => event.e)\n\nmodule.exports = {\n  filterByOneProperty,\n  filterIncludesString,\n  oneTime,\n  recurring,\n  recurringByProperty,\n  removeCancelled,\n  removeRecurrenceProperty\n}"]},"metadata":{},"sourceType":"module"}